# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

    cron.send_password_email:
        class: AppBundle\Service\PasswordEmailCronService
        arguments:
            - @doctrine.orm.default_entity_manager
            - @service_container

    login.security.authentication_failure_event_listener:
        class: AppBundle\Service\AuthenticationListener
        arguments: [ @doctrine.orm.default_entity_manager ]
        tags:
            - { name: kernel.event_listener, event: security.authentication.failure, method: onAuthenticationFailure }

    login.security.interactive_login_listener:
        class: AppBundle\Service\AuthenticationListener
        arguments: [ @doctrine.orm.default_entity_manager ]
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onAuthenticationSuccess }

    app.twig_extension:
        class: AppBundle\Service\TwigExtensionService
        public: false
        arguments: [ @doctrine.orm.default_entity_manager]
        tags:
            - { name: twig.extension }

    app.mailchimp:
        class: AppBundle\Service\MailChimpService
        arguments: [ 'cbfa7688feed2090bf0581522dc4a25f-us15' ]

    app.listener.maintenance:
        class: AppBundle\Service\MaintenanceService
        arguments:
            container: "@service_container"
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    kernel.listener.response_listener:
        class: AppBundle\Service\ResponseListener
        arguments: [ @service_container ]
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    kernel.listener.exception_listener:
        class: AppBundle\Service\ExceptionListener
        arguments: [ @service_container ]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    app.pdo_connect:
        class: AppBundle\Service\PdoService
        arguments: [ @service_container ]
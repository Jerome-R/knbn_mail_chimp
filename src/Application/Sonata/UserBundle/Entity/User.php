<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;

use AppBundle\Entity\KpiCapture;
use AppBundle\Entity\KpiTrigger;
use AppBundle\Entity\Module;
use AppBundle\Entity\Client;
use AppBundle\Entity\UserModule;
use AppBundle\Entity\Recipient;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */

/**
 * User
 *
 * @ORM\Entity
 * @ORM\Table(name="fos_user_user")
 * @ORM\HasLifecycleCallbacks()
 */
class User extends BaseUser
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string $webMail
     *
     * @ORM\Column(name="web_mail", type="string", length=100, nullable=true)
     */
    protected $webMail;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\KpiCapture", mappedBy="user")
     */
    private $kpiCaptures;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\KpiTrigger", mappedBy="user")
     */
    private $kpiTriggers;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\Recipient", mappedBy="user")
     */
    private $recipients;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\Client", mappedBy="userTrigger")
     */
    private $clientsTriggers;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\Client", mappedBy="userTopclient")
     */
    private $topclients;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\ClientSuspectDoublon", mappedBy="user")
     */
    private $doublonSuspects;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\UserModule", mappedBy="user")
     * @ORM\JoinTable(name="app_user_module")
     */
    private $userModules;

    /**
     * @var string $signature
     *
     * @ORM\Column(name="signature", type="string", length=255, nullable=true)
     */
    protected $signature;

    /**
     * @var string $store
     *
     * @ORM\Column(name="store", type="string", length=255, nullable=true)
     */
    protected $store;

    /**
     * @var string $libelle
     *
     * @ORM\Column(name="libelle", type="string", length=255, nullable=true)
     */
    protected $libelle;

    /**
     * @var string $directeur
     *
     * @ORM\Column(name="directeur", type="string", length=255, nullable=true)
     */
    protected $directeur;

    /**
     * @var string $retailManager
     *
     * @ORM\Column(name="retail_manager", type="string", length=255, nullable=true)
     */
    protected $retailManager;

    /**
     * @var string $brand
     *
     * @ORM\Column(name="brand", type="string", length=100, nullable=true)
     */
    protected $brand ;

    /**
     * @var string $role
     *
     * @ORM\Column(name="role", type="string", length=100, nullable=true)
     */
    protected $role ;

    /**
     * @var string $role
     *
     * @ORM\Column(name="email_reply", type="string", length=150, nullable=true)
     */
    protected $emailReply ;

    /**
     * @var string $is_email_credential_expirate_sent
     *
     * @ORM\Column(name="is_email_credential_expired_sent", type="boolean", nullable=true)
     */
    protected $isEmailCredentialExpiredSent = false;

    /**
     * @var integer $authenticationFailure
     *
     * @ORM\Column(name="authentication_failure", type="integer")
     */
    protected $authenticationFailure = 0 ;


    public function __construct()
    {
        parent::__construct();

        $this->kpiCaptures              = new ArrayCollection();
        $this->kpiTriggers              = new ArrayCollection();
        $this->userModules              = new ArrayCollection();
        $this->recipients               = new ArrayCollection();
        $this->clientsTrigger           = new ArrayCollection();
        $this->topclients               = new ArrayCollection();
        $this->doublonSuspects          = new ArrayCollection();
        $this->store                    = "";
        $this->directeur                = "";
        $this->retailManager            = "";
        $this->brand                    = "";
        $this->role                     = "";
        $this->authenticationFailure    = 0;
        $this->emailReply               = null;

        $this->isEmailCredentialExpiredSent = false;

        $this->enabled = true;
    }

    /**
     * Get id
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * set id
     *
     * @return int $id
     */
    public function setId($id)
    {
        $this->id = $id;
        return $this;
    }

    /**
     * Get authenticationFailure
     *
     * @return int $authenticationFailure
     */
    public function getAuthenticationFailure()
    {
        return $this->authenticationFailure;
    }

    /**
     * set authenticationFailure
     *
     * @return int $authenticationFailure
     */
    public function setAuthenticationFailure($authenticationFailure)
    {
        $this->authenticationFailure = $authenticationFailure;
        return $this;
    }

    /**
     * Get webMail
     *
     * @return int $webMail
     */
    public function getWebMail()
    {
        return $this->webMail;
    }

    /**
     * Set webMail
     *
     * @param string $webMail
     *
     * @return User
     */
    public function setWebMail($webMail)
    {
        $this->webMail = $webMail;
        return $this;
    }

    /**
     * Get libelle
     *
     * @return int $libelle
     */
    public function getLibelle()
    {
        return $this->libelle;
    }

    /**
     * Set libelle
     *
     * @param string $libelle
     *
     * @return User
     */
    public function setLibelle($libelle)
    {
        $this->libelle = $libelle;
        return $this;
    }

    /**
     * Get signature
     *
     * @return int $signature
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * Set signature
     *
     * @param string $signature
     *
     * @return User
     */
    public function setSignature($signature)
    {
        $this->signature = $signature;
        return $this;
    }

    /**
     * Get directeur
     *
     * @return int $directeur
     */
    public function getDirecteur()
    {
        return $this->directeur;
    }

    /**
     * Set directeur
     *
     * @param string $directeur
     *
     * @return User
     */
    public function setDirecteur($directeur)
    {
        $this->directeur = $directeur;
        return $this;
    }

    /**
     * Get store
     *
     * @return int $store
     */
    public function getStore()
    {
        return $this->store;
    }

    /**
     * Set store
     *
     * @param string $store
     *
     * @return User
     */
    public function setStore($store)
    {
        $this->store = $store;
        return $this;
    }

    /**
     * Get retailManager
     *
     * @return int $retailManager
     */
    public function getRetailManager()
    {
        return $this->retailManager;
    }

    /**
     * Set retailManager
     *
     * @param string $retailManager
     *
     * @return User
     */
    public function setRetailManager($retailManager)
    {
        $this->retailManager = $retailManager;
        return $this;
    }

    /**
     * Get brand
     *
     * @return int $brand
     */
    public function getBrand()
    {
        return $this->brand;
    }

    /**
     * Set brand
     *
     * @param string $brand
     *
     * @return User
     */
    public function setBrand($brand)
    {
        $this->brand = $brand;
        return $this;
    }

    /**
     * Get role
     *
     * @return int $role
     */
    public function getRole()
    {
        return $this->role;
    }

    /**
     * Set role
     *
     * @param string $role
     *
     * @return User
     */
    public function setRole($role)
    {
        $this->role = $role;
        return $this;
    }

    /**
     * Get isEmailCredentialExpiredSent
     *
     * @return int $isEmailCredentialExpiredSent
     */
    public function getIsEmailCredentialExpiredSent()
    {
        return $this->isEmailCredentialExpiredSent;
    }

    /**
     * Set isEmailCredentialExpiredSent
     *
     * @param boolean $isEmailCredentialExpiredSent
     *
     * @return User
     */
    public function setIsEmailCredentialExpiredSent($isEmailCredentialExpiredSent)
    {
        $this->isEmailCredentialExpiredSent = $isEmailCredentialExpiredSent;
        return $this;
    }

    /**
     * Get emailReply
     *
     * @return int $emailReply
     */
    public function getEmailReply()
    {
        return $this->emailReply;
    }

    /**
     * Set emailReply
     *
     * @param string $emailReply
     *
     * @return User
     */
    public function setEmailReply($emailReply)
    {
        $this->emailReply = $emailReply;
        return $this;
    }

    /**
     * add kpiCapture
     * remove kpiCapture
     * get kpiCaptures
     *
     * @param KpiCaptures $kpiCapture
     *
     * @return User
     */
    public function addKpiCapture(KpiCapture $kpiCapture)
    {
        $this->kpiCaptures[] = $kpiCapture;

        return $this;
    }

    public function removeKpiCapture(KpiCapture $kpiCapture)
    {
        $this->kpiCaptures->removeElement($kpiCapture);
    }

    public function getKpiCaptures()
    {
        return $this->kpiCaptures;
    }

    /**
     * add topclient
     * remove topclient
     * get topclients
     *
     * @param Client $topclient
     *
     * @return User
     */
    public function addTopclient(Client $topclient)
    {
        $this->topclients[] = $topclient;

        return $this;
    }

    public function removeTopclient(Client $topclient)
    {
        $this->topclients->removeElement($topclient);
    }

    public function getTopclients()
    {
        return $this->topclients;
    }

    /**
     * add doublonSuspect
     * remove doublonSuspect
     * get doublonSuspects
     *
     * @param Client $doublonSuspect
     *
     * @return User
     */
    public function addDoublonSuspect(Client $doublonSuspect)
    {
        $this->doublonSuspects[] = $doublonSuspect;

        return $this;
    }

    public function removeDoublonSuspect(Client $doublonSuspect)
    {
        $this->doublonSuspects->removeElement($doublonSuspect);
    }

    public function getDoublonSuspects()
    {
        return $this->doublonSuspects;
    }

    /**
     * add clientsTrigger
     * remove clientsTrigger
     * get clientsTriggers
     *
     * @param Client $clientsTrigger
     *
     * @return User
     */
    public function addClientTrigger(Client $clientsTrigger)
    {
        $this->clientsTriggers[] = $clientsTrigger;

        return $this;
    }

    public function removeClientTrigger(Client $clientsTrigger)
    {
        $this->clientsTriggers->removeElement($clientsTrigger);
    }

    public function getClientTriggers()
    {
        return $this->clientsTriggers;
    }

    /**
     * add kpiTrigger
     * remove kpiTrigger
     * get kpiTriggers
     *
     * @param KpiCaptures $kpiTrigger
     *
     * @return User
     */
    public function addKpiTrigger(KpiTrigger $kpiTrigger)
    {
        $this->kpiTriggers[] = $kpiTrigger;

        return $this;
    }

    public function removeKpiTrigger(KpiTrigger $kpiTrigger)
    {
        $this->kpiTriggers->removeElement($kpiTrigger);
    }

    public function getKpiTriggers()
    {
        return $this->kpiCaptures;
    }

    /**
     * add userModule
     * remove userModule
     * get userModules
     *
     * @param UserModule $userModule
     *
     * @return User
     */
    public function addUserModule(UserModule $userModule)
    {
        $this->userModules[] = $userModule;

        return $this;
    }

    public function removeUserModule(UserModule $userModule)
    {
        $this->userModules->removeElement($userModule);
    }

    public function getUserModules()
    {
        return $this->userModules;
    }

    /**
     * @ORM\PrePersist
     * @ORM\PreUpdate
     */
    public function updateRoles() {
        if( $this->hasRole('ROLE_SIEGE') ) {
            $this->setRole('ROLE_SIEGE');
        }elseif( $this->hasRole('ROLE_RETAIL_MANAGER') ) {
            $this->setRole('ROLE_RETAIL_MANAGER');
        }elseif( $this->hasRole('ROLE_DIRECTEUR') ) {
            $this->setRole('ROLE_DIRECTEUR');
        }elseif( $this->hasRole('ROLE_BOUTIQUE') ) {
            $this->setRole('ROLE_BOUTIQUE');
        }
        else{
            if( $this->role != '' or $this->role != null ){
                $this->addRole($this->getRole());
            }
        }
    }
}

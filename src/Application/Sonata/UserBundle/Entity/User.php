<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;

use AppBundle\Entity\KpiCapture;
use AppBundle\Entity\KpiTrigger;
use AppBundle\Entity\Module;
use AppBundle\Entity\Client;
use AppBundle\Entity\UserModule;
use AppBundle\Entity\Recipient;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */

/**
 * User
 *
 * @ORM\Entity
 * @ORM\Table(name="fos_user_user")
 * @ORM\HasLifecycleCallbacks()
 */
class User extends BaseUser
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string $webMail
     *
     * @ORM\Column(name="web_mail", type="string", length=100, nullable=true)
     */
    protected $webMail;

    /**
     * @var string $signature
     *
     * @ORM\Column(name="signature", type="string", length=255, nullable=true)
     */
    protected $signature;

    /**
     * @var string $role
     *
     * @ORM\Column(name="role", type="string", length=100, nullable=true)
     */
    protected $role ;

    /**
     * @var string $is_email_credential_expirate_sent
     *
     * @ORM\Column(name="is_email_credential_expired_sent", type="boolean", nullable=true)
     */
    protected $isEmailCredentialExpiredSent = false;

    /**
     * @var integer $authenticationFailure
     *
     * @ORM\Column(name="authentication_failure", type="integer")
     */
    protected $authenticationFailure = 0 ;


    public function __construct()
    {
        parent::__construct();      

        $this->signature                = "";
        $this->webMail                  = "";
        $this->role                     = "";
        $this->authenticationFailure    = 0;
        $this->emailReply               = null;

        $this->isEmailCredentialExpiredSent = false;

        $this->enabled = true;
    }

    /**
     * Get id
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * set id
     *
     * @return int $id
     */
    public function setId($id)
    {
        $this->id = $id;
        return $this;
    }

    /**
     * Get authenticationFailure
     *
     * @return int $authenticationFailure
     */
    public function getAuthenticationFailure()
    {
        return $this->authenticationFailure;
    }

    /**
     * set authenticationFailure
     *
     * @return int $authenticationFailure
     */
    public function setAuthenticationFailure($authenticationFailure)
    {
        $this->authenticationFailure = $authenticationFailure;
        return $this;
    }

    /**
     * Get webMail
     *
     * @return int $webMail
     */
    public function getWebMail()
    {
        return $this->webMail;
    }

    /**
     * Set webMail
     *
     * @param string $webMail
     *
     * @return User
     */
    public function setWebMail($webMail)
    {
        $this->webMail = $webMail;
        return $this;
    }


    /**
     * Get signature
     *
     * @return int $signature
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * Set signature
     *
     * @param string $signature
     *
     * @return User
     */
    public function setSignature($signature)
    {
        $this->signature = $signature;
        return $this;
    }

    /**
     * Get isEmailCredentialExpiredSent
     *
     * @return int $isEmailCredentialExpiredSent
     */
    public function getIsEmailCredentialExpiredSent()
    {
        return $this->isEmailCredentialExpiredSent;
    }

    /**
     * Set isEmailCredentialExpiredSent
     *
     * @param boolean $isEmailCredentialExpiredSent
     *
     * @return User
     */
    public function setIsEmailCredentialExpiredSent($isEmailCredentialExpiredSent)
    {
        $this->isEmailCredentialExpiredSent = $isEmailCredentialExpiredSent;
        return $this;
    }

    /**
     * @ORM\PrePersist
     * @ORM\PreUpdate
     */
    public function updateRoles() {
        if( $this->hasRole('ROLE_SIEGE') ) {
            $this->setRole('ROLE_SIEGE');
        }elseif( $this->hasRole('ROLE_RETAIL_MANAGER') ) {
            $this->setRole('ROLE_RETAIL_MANAGER');
        }elseif( $this->hasRole('ROLE_DIRECTEUR') ) {
            $this->setRole('ROLE_DIRECTEUR');
        }elseif( $this->hasRole('ROLE_BOUTIQUE') ) {
            $this->setRole('ROLE_BOUTIQUE');
        }
        else{
            if( $this->role != '' or $this->role != null ){
                $this->addRole($this->getRole());
            }
        }
    }
}
